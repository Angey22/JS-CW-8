{"version":3,"sources":["js/01-localstorage.js"],"names":["console","groupCollapsed","user","name","age","log","JSON","stringify","savedUserData","parse","groupEnd","localStorage","setItem","savedData","getItem","parsedData","length"],"mappings":";AAAA;;AAEA;;;;;AAKAA,QAAQC,cAAR,CAAuB,0CAAvB;;AAEA;AACA;AACA,IAAMC,OAAO;AACXC,QAAM,OADK;AAEXC,OAAK;AAFM,CAAb;AAIAJ,QAAQK,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;;AAEA;AACAF,QAAQK,GAAR,CAAY,yBAAZ,EAAuCC,KAAKC,SAAL,CAAeL,IAAf,CAAvC;AACAF,QAAQK,GAAR,CAAY,+CAAZ;;AAEA;AACA;AACA,IAAMG,gBAAgB,0BAAtB;AACAR,QAAQK,GAAR,CAAY,kBAAZ,EAAgCG,aAAhC;;AAEA;AACAR,QAAQK,GAAR,CAAY,8BAAZ,EAA4CC,KAAKG,KAAL,CAAWD,aAAX,CAA5C;;AAEAR,QAAQU,QAAR;AACAV,QAAQK,GAAR,CAAY,+CAAZ;;AAGA;;;;;;;;AAQAL,QAAQC,cAAR,CAAuB,iBAAvB;;AAEA;;AAEA;AACAD,QAAQK,GAAR,CAAY,iBAAZ,EAA+BM,YAA/B;;AAEA;AACAA,aAAaC,OAAb,CAAqB,WAArB,EAAkC,KAAlC;;AAEA;AACAD,aAAaC,OAAb,CAAqB,SAArB,EAAgCN,KAAKC,SAAL,CAAe,EAAEJ,MAAM,OAAR,EAAiBC,KAAK,CAAtB,EAAf,CAAhC;;AAEA;AACA,IAAMS,YAAYF,aAAaG,OAAb,CAAqB,SAArB,CAAlB;AACAd,QAAQK,GAAR,CAAY,cAAZ,EAA4BQ,SAA5B;AACA;;AAEA;AACA,IAAME,aAAaT,KAAKG,KAAL,CAAWI,SAAX,CAAnB;AACAb,QAAQK,GAAR,CAAY,eAAZ,EAA6BU,UAA7B;;AAEA;;AAEA;;AAEA;;AAEA;AACAf,QAAQK,GAAR,CAAY,iDAAZ,EAA+DM,aAAaK,MAA5E;;AAEA;AACA;;AAEA;AACAhB,QAAQK,GAAR,CAAY,oDAAZ,EAAkEM,aAAaK,MAA/E;;AAEA;AACA;;AAEAhB,QAAQU,QAAR;AACAV,QAAQK,GAAR,CAAY,+CAAZ","file":"01-localstorage.5360cd8e.map","sourceRoot":"../src","sourcesContent":["//! Видео - [0:01:00...0:15:10](https://www.youtube.com/watch?v=Fh8d14cY9AM&t=60s)\n\n/*\n* Преобразование значения в JSON и обратно:\n*   - JSON.stringify() - преобразование в формат JSON;\n*   - JSON.parse() - обратная опереция преобразования, из формата JSON.\n*/\nconsole.groupCollapsed('Преобразование значения в JSON и обратно');\n\n//! Преобразовываем объект в строку\n// Создаем объект \"user\"\nconst user = {\n  name: 'Mango',\n  age: 2,\n}\nconsole.log(\"user =>\", user)\n\n// Преобразовываем объект \"user\" в строку с помощью метода \"JSON.stringify()\".\nconsole.log(\"JSON.stringify(user) =>\", JSON.stringify(user))\nconsole.log('---------------------------------------------');\n\n//! Преобразовываем строку в объект\n// Создаем переменную со строчным литералом определенного вида.\nconst savedUserData = '{\"name\":\"Mango\",\"age\":2}';\nconsole.log(\"savedUserData =>\", savedUserData)\n\n// Преобразовываем строку в объект\nconsole.log('JSON.parse(savedUserData) =>', JSON.parse(savedUserData));\n\nconsole.groupEnd();\nconsole.log('-1-------------------------------------------');\n\n\n/*\n* Web Storage API:\n*  - setItem(key, value) - делает новую, или обновляет уже существующую запись в хранилище;\n*  - getItem(key) - возвращает из хранилища значение с ключом key;\n*  - removeItem(key) - удаляет из хранилища запись с ключом key;\n*  - clear() - полностью очищает все записи в хранилище;\n*  - length - хранит количество записей в хранилище.\n*/\nconsole.groupCollapsed('Web Storage API');\n\n//! Web Storage - это хранилище информации с ограниченным объемом и возможностями, которое расположено на ПК пользователя (на жестком диске ПК пользователя), в его браузере.\n\n// Просмотриваем объект \"localStorage\", расположенный внутри объекта \"window\" браузера.\nconsole.log('localStorage =>', localStorage);\n\n// Сохраняем значение в \"localStorage\" с помошью прямого ввода ключа(key) и значения(value).\nlocalStorage.setItem('my-data-1', 'qwe');\n\n// Сохраняем значение в \"localStorage\" с помошью метода \"JSON.stringify([объект])\".\nlocalStorage.setItem('my-data', JSON.stringify({ name: 'Mango', age: 2 }));\n\n// Создаем переменную \"savedData\" и задаем ей в качестве значения текстовый литерал, который хранится в \"localStorage\" под определенным ключом (key).\nconst savedData = localStorage.getItem('my-data');\nconsole.log('savedData =>', savedData);\n//! Метод \"getItem()\" - не производит парсинг данных, он возвращает их в том виде в котором они есть (в виде строки).\n\n// Создаем переменную \"parsedData\" и задаем ей в качестве значения преобразованый с помощью парсинга текстовый литерал из переменной \"savedData\".\nconst parsedData = JSON.parse(savedData);\nconsole.log('parsedData =>', parsedData);\n\n//! Все сохраняемые в \"localStorage\" данные сохраняются с привязкой к конкретному сайту и могут быть использованы при работе пользователя с этим конктетным сайтом. Однако, эти данные хранятся на одном определенном устройстве, и если пользователь зайдет на сайт с другого устройства - соответствующих данных НЕ будет!\n\n//! Все сохраняемые в \"SesionStorage\" данные сохраняются с привязкой к конкретной текущего вкладке сайта, и хранятся только до тех пор, покаместь эта вкладка не будет закрыта пользователем.\n\n//! В хранилищах \"localStorage\" и \"SesionStorage\" хранят, в основном - объекты данных. При этом, любые методы объектов - не проходят JSON преобразования, и попросту удаляются из преобразованного объекта.\n\n// Проверяем количество записей находящихся в хранилище \"localStorage\",\nconsole.log('Проверка до удаления - \"localStorage.length =>\"', localStorage.length);\n\n// Удаляем из \"localStorage\" данные привязанные к ключу \"\"\n// localStorage.removeItem('my-data-1'); //!!!\n\n// Проверяем количество записей находящихся в хранилище \"localStorage\".\nconsole.log('Проверка после удаления - \"localStorage.length =>\"', localStorage.length);\n\n// Полностью очищаем хранилище \"localStorage\"\n// localStorage.clear(); //!!!\n\nconsole.groupEnd();\nconsole.log('-2-------------------------------------------');\n"]}