{"version":3,"sources":["js/filters.js"],"names":["filterForm","document","querySelector","addEventListener","evt","preventDefault","console","groupCollapsed","log","elements","color","value","formData","FormData","forEach","name","concat","groupEnd"],"mappings":";AAGA,IAAMA,EAAaC,SAASC,cAAc,gBAG1CF,EAAWG,iBAAiB,SAAU,SAAAC,GACpCA,EAAIC,iBAEJC,QAAQC,eAAe,qCAEvBD,QAAQE,IAAIR,EAAWS,UAGvBH,QAAQE,IAAI,qCAAsCR,EAAWS,SAASC,MAAMC,OAG5E,IAAMC,EAAW,IAAIC,SAASb,GAC9BM,QAAQE,IAAI,cAAeI,GAG3BA,EAASE,QAAQ,SAACH,EAAOI,GAAI,OAAKT,QAAQE,IAAGQ,GAAAA,OAAID,EAAWJ,OAAAA,KAE5DL,QAAQW","file":"filters.32fd1526.js","sourceRoot":"../src","sourcesContent":["//! Видео - [0:52:00...0:00:00](https://www.youtube.com/watch?v=mzWl1sWTT9U&t=3120s)\n\n// Создаем переменную-ссылку на форму\nconst filterForm = document.querySelector('.filter-form');\n\n// \"Вешаем\" слушателя на форму\nfilterForm.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  console.groupCollapsed('Примеры получения данных из формы')\n  // Смотрими на объкт - набор элементов формы.\n  console.log(filterForm.elements);\n\n  // Смотрим значение конкретного \"селекта\".\n  console.log('filterForm.elements.color.value =>', filterForm.elements.color.value);\n\n  // Собираем все данные с формы с помощью служебной итерируемой сущности - \"FormData\".\n  const formData = new FormData(filterForm);\n  console.log(\"formData =>\", formData);\n\n  // У сущности \"FormData\" есть метод перебора данных - \"forEach\", который позволяет получить набор данных из формы.\n  formData.forEach((value, name) => console.log(`${name} =>`, value));\n\n  console.groupEnd();\n\n  \n\n});"]}